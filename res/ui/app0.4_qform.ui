<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>Form</class>
 <widget class="QWidget" name="Form">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>866</width>
    <height>352</height>
   </rect>
  </property>
  <property name="windowTitle">
   <string>Form</string>
  </property>
  <layout class="QGridLayout" name="gridLayout_3">
   <item row="0" column="0">
    <layout class="QGridLayout" name="gridLayout_2">
     <item row="0" column="0">
      <widget class="TableWidget" name="table_widget_info_bar"/>
     </item>
     <item row="1" column="0">
      <layout class="QHBoxLayout" name="horizontalLayout_3">
       <item>
        <widget class="TextEdit" name="text_edit_path_input">
         <property name="sizePolicy">
          <sizepolicy hsizetype="Minimum" vsizetype="Maximum">
           <horstretch>0</horstretch>
           <verstretch>0</verstretch>
          </sizepolicy>
         </property>
         <property name="minimumSize">
          <size>
           <width>500</width>
           <height>130</height>
          </size>
         </property>
         <property name="maximumSize">
          <size>
           <width>16777215</width>
           <height>130</height>
          </size>
         </property>
        </widget>
       </item>
       <item>
        <layout class="QGridLayout" name="gridLayout">
         <item row="0" column="0" colspan="2">
          <layout class="QHBoxLayout" name="horizontalLayout_2">
           <property name="spacing">
            <number>0</number>
           </property>
           <item>
            <widget class="StrongBodyLabel" name="StrongBodyLabel">
             <property name="minimumSize">
              <size>
               <width>90</width>
               <height>20</height>
              </size>
             </property>
             <property name="maximumSize">
              <size>
               <width>90</width>
               <height>20</height>
              </size>
             </property>
             <property name="text">
              <string>设定全局日期</string>
             </property>
            </widget>
           </item>
           <item>
            <widget class="ToolButton" name="tool_button_author_info">
             <property name="sizePolicy">
              <sizepolicy hsizetype="Minimum" vsizetype="Fixed">
               <horstretch>0</horstretch>
               <verstretch>0</verstretch>
              </sizepolicy>
             </property>
             <property name="minimumSize">
              <size>
               <width>20</width>
               <height>20</height>
              </size>
             </property>
             <property name="maximumSize">
              <size>
               <width>20</width>
               <height>20</height>
              </size>
             </property>
             <property name="styleSheet">
              <string notr="true">PushButton, ToolButton, ToggleButton, ToggleToolButton {
    color: black;
    background: rgba(255, 255, 255, 0.7);
    border: 1px solid rgba(0, 0, 0, 0.073);
    border-bottom: 1px solid rgba(0, 0, 0, 0.183);
    border-radius: 5px;
    /* font: 14px 'Segoe UI', 'Microsoft YaHei'; */
    padding: 5px 12px 6px 12px;
    outline: none;
}

ToolButton {
    padding: 5px 9px 6px 8px;
}

PushButton[hasIcon=false] {
    padding: 5px 12px 6px 12px;
}

PushButton[hasIcon=true] {
    padding: 5px 12px 6px 36px;
}

DropDownToolButton, PrimaryDropDownToolButton {
    padding: 5px 31px 6px 8px;
}

DropDownPushButton[hasIcon=false],
PrimaryDropDownPushButton[hasIcon=false] {
    padding: 5px 31px 6px 12px;
}

DropDownPushButton[hasIcon=true],
PrimaryDropDownPushButton[hasIcon=true] {
    padding: 5px 31px 6px 36px;
}

PushButton:hover, ToolButton:hover, ToggleButton:hover, ToggleToolButton:hover {
    background: rgba(249, 249, 249, 0.5);
}

PushButton:pressed, ToolButton:pressed, ToggleButton:pressed, ToggleToolButton:pressed {
    color: rgba(0, 0, 0, 0.63);
    background: rgba(249, 249, 249, 0.3);
    border-bottom: 1px solid rgba(0, 0, 0, 0.073);
}

PushButton:disabled, ToolButton:disabled, ToggleButton:disabled, ToggleToolButton:disabled {
    color: rgba(0, 0, 0, 0.36);
    background: rgba(249, 249, 249, 0.3);
    border: 1px solid rgba(0, 0, 0, 0.06);
    border-bottom: 1px solid rgba(0, 0, 0, 0.06);
}


PrimaryPushButton,
PrimaryToolButton,
ToggleButton:checked,
ToggleToolButton:checked {
    color: white;
    background-color: #009faa;
    border: 1px solid #00a7b3;
    border-bottom: 1px solid #007780;
}

PrimaryPushButton:hover,
PrimaryToolButton:hover,
ToggleButton:checked:hover,
ToggleToolButton:checked:hover {
    background-color: #00a7b3;
    border: 1px solid #2daab3;
    border-bottom: 1px solid #007780;
}

PrimaryPushButton:pressed,
PrimaryToolButton:pressed,
ToggleButton:checked:pressed,
ToggleToolButton:checked:pressed {
    color: rgba(255, 255, 255, 0.63);
    background-color: #3eabb3;
    border: 1px solid #3eabb3;
}

PrimaryPushButton:disabled,
PrimaryToolButton:disabled,
ToggleButton:checked:disabled,
ToggleToolButton:checked:disabled {
    color: rgba(255, 255, 255, 0.9);
    background-color: rgb(205, 205, 205);
    border: 1px solid rgb(205, 205, 205);
}

SplitDropButton,
PrimarySplitDropButton {
    border-left: none;
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
}

#splitPushButton,
#splitToolButton,
#primarySplitPushButton,
#primarySplitToolButton {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
}

#splitPushButton:pressed,
#splitToolButton:pressed,
SplitDropButton:pressed {
    border-bottom: 1px solid rgba(0, 0, 0, 0.183);
}

PrimarySplitDropButton:pressed {
    border-bottom: 1px solid #007780;
}

#primarySplitPushButton, #primarySplitToolButton {
    border-right: 1px solid #3eabb3;
}

#primarySplitPushButton:pressed, #primarySplitToolButton:pressed {
    border-bottom: 1px solid #007780;
}

HyperlinkButton {
    /* font: 14px 'Segoe UI', 'Microsoft YaHei'; */
    padding: 6px 12px 6px 12px;
    color: #009faa;
    border: none;
    border-radius: 6px;
    background-color: transparent;
}

HyperlinkButton[hasIcon=false] {
    padding: 6px 12px 6px 12px;
}

HyperlinkButton[hasIcon=true] {
    padding: 6px 12px 6px 36px;
}

HyperlinkButton:hover {
    color: #009faa;
    background-color: rgba(0, 0, 0, 10);
    border: none;
}

HyperlinkButton:pressed {
    color: #009faa;
    background-color: rgba(0, 0, 0, 6);
    border: none;
}

HyperlinkButton:disabled {
    color: rgba(0, 0, 0, 0.43);
    background-color: transparent;
    border: none;
}


RadioButton {
    min-height: 24px;
    max-height: 24px;
    background-color: transparent;
    font: 14px 'Segoe UI', 'Microsoft YaHei', 'PingFang SC';
    color: black;
}

RadioButton::indicator {
    width: 18px;
    height: 18px;
    border-radius: 11px;
    border: 2px solid #999999;
    background-color: rgba(0, 0, 0, 5);
    margin-right: 4px;
}

RadioButton::indicator:hover {
    background-color: rgba(0, 0, 0, 0);
}

RadioButton::indicator:pressed {
    border: 2px solid #bbbbbb;
    background-color: qradialgradient(spread:pad, cx:0.5, cy:0.5, radius:0.5, fx:0.5, fy:0.5,
            stop:0 rgb(255, 255, 255),
            stop:0.5 rgb(255, 255, 255),
            stop:0.6 rgb(225, 224, 223),
            stop:1 rgb(225, 224, 223));
}

RadioButton::indicator:checked {
    height: 22px;
    width: 22px;
    border: none;
    border-radius: 11px;
    background-color: qradialgradient(spread:pad, cx:0.5, cy:0.5, radius:0.5, fx:0.5, fy:0.5,
            stop:0 rgb(255, 255, 255),
            stop:0.5 rgb(255, 255, 255),
            stop:0.6 #009faa,
            stop:1 #009faa);
}

RadioButton::indicator:checked:hover {
    background-color: qradialgradient(spread:pad, cx:0.5, cy:0.5, radius:0.5, fx:0.5, fy:0.5,
            stop:0 rgb(255, 255, 255),
            stop:0.6 rgb(255, 255, 255),
            stop:0.7 #009faa,
            stop:1 #009faa);
}

RadioButton::indicator:checked:pressed {
    background-color: qradialgradient(spread:pad, cx:0.5, cy:0.5, radius:0.5, fx:0.5, fy:0.5,
            stop:0 rgb(255, 255, 255),
            stop:0.5 rgb(255, 255, 255),
            stop:0.6 #009faa,
            stop:1 #009faa);
}

RadioButton:disabled {
    color: rgba(0, 0, 0, 110);
}

RadioButton::indicator:disabled {
    border: 2px solid #bbbbbb;
    background-color: transparent;
}

RadioButton::indicator:disabled:checked {
    border: none;
    background-color: qradialgradient(spread:pad, cx:0.5, cy:0.5, radius:0.5, fx:0.5, fy:0.5,
            stop:0 rgb(255, 255, 255),
            stop:0.5 rgb(255, 255, 255),
            stop:0.6 rgba(0, 0, 0, 0.2169),
            stop:1 rgba(0, 0, 0, 0.2169));
}

TransparentToolButton,
TransparentToggleToolButton,
TransparentDropDownToolButton,
TransparentPushButton,
TransparentDropDownPushButton,
TransparentTogglePushButton {
    background-color: transparent;
    border: none;
    border-radius: 5px;
    margin: 0;
}

TransparentToolButton:hover,
TransparentToggleToolButton:hover,
TransparentDropDownToolButton:hover,
TransparentPushButton:hover,
TransparentDropDownPushButton:hover,
TransparentTogglePushButton:hover {
    background-color: rgba(0, 0, 0, 9);
    border: none;
}

TransparentToolButton:pressed,
TransparentToggleToolButton:pressed,
TransparentDropDownToolButton:pressed,
TransparentPushButton:pressed,
TransparentDropDownPushButton:pressed,
TransparentTogglePushButton:pressed {
    background-color: rgba(0, 0, 0, 6);
    border: none;
}

TransparentToolButton:disabled,
TransparentToggleToolButton:disabled,
TransparentDropDownToolButton:disabled,
TransprentPushButton:disabled,
TransparentDropDownPushButton:disabled,
TransprentTogglePushButton:disabled {
    background-color: transparent;
    border: none;
}


PillPushButton,
PillPushButton:hover,
PillPushButton:pressed,
PillPushButton:disabled,
PillPushButton:checked,
PillPushButton:checked:hover,
PillPushButton:checked:pressed,
PillPushButton:disabled:checked,
PillToolButton,
PillToolButton:hover,
PillToolButton:pressed,
PillToolButton:disabled,
PillToolButton:checked,
PillToolButton:checked:hover,
PillToolButton:checked:pressed,
PillToolButton:disabled:checked {
    background-color: transparent;
    border: none;
}
</string>
             </property>
            </widget>
           </item>
           <item>
            <spacer name="horizontalSpacer">
             <property name="orientation">
              <enum>Qt::Horizontal</enum>
             </property>
             <property name="sizeHint" stdset="0">
              <size>
               <width>211</width>
               <height>17</height>
              </size>
             </property>
            </spacer>
           </item>
          </layout>
         </item>
         <item row="1" column="0">
          <layout class="QVBoxLayout" name="verticalLayout_2">
           <item>
            <widget class="CalendarPicker" name="calendar_picker_ymd">
             <property name="minimumSize">
              <size>
               <width>240</width>
               <height>30</height>
              </size>
             </property>
             <property name="maximumSize">
              <size>
               <width>240</width>
               <height>30</height>
              </size>
             </property>
             <property name="autoDefault">
              <bool>false</bool>
             </property>
             <property name="dateFormat">
              <enum>Qt::LocalDate</enum>
             </property>
            </widget>
           </item>
           <item>
            <widget class="TimePicker" name="time_picker_hms">
             <property name="enabled">
              <bool>true</bool>
             </property>
             <property name="minimumSize">
              <size>
               <width>240</width>
               <height>30</height>
              </size>
             </property>
             <property name="maximumSize">
              <size>
               <width>240</width>
               <height>30</height>
              </size>
             </property>
             <property name="focusPolicy">
              <enum>Qt::StrongFocus</enum>
             </property>
             <property name="toolTip">
              <string/>
             </property>
             <property name="styleSheet">
              <string notr="true">ScrollButton {
    background-color: rgb(249, 249, 249);
    border: none;
    border-radius: 7px;
}

CycleListWidget {
    background-color: transparent;
    border: none;
    border-top-left-radius: 7px;
    border-top-right-radius: 7px;
    outline: none;
    font: 14px 'Segoe UI', 'Microsoft YaHei', 'PingFang SC';
}

CycleListWidget::item {
    color: black;
    background-color: transparent;
    border: none;
    border-radius: 5px;
    margin: 0 4px;
    padding-left: 11px;
    padding-right: 11px;
}

CycleListWidget::item:hover {
    background-color: rgba(0, 0, 0, 9);
}

CycleListWidget::item:selected {
    background-color: rgba(0, 0, 0, 9);
}

CycleListWidget::item:selected:active {
    background-color: rgba(0, 0, 0, 6);
}

PickerPanel &gt; #view {
    background-color: rgb(249, 249, 249);
    border: 1px solid rgba(0, 0, 0, 0.14);
    border-radius: 7px;
}

SeparatorWidget {
    background-color: rgb(234, 234, 234);
}

ItemMaskWidget {
    font: 14px 'Segoe UI', 'Microsoft YaHei', 'PingFang SC';
}

PickerBase {
    font: 14px 'Segoe UI', 'Microsoft YaHei', 'PingFang SC';
    background: rgba(255, 255, 255, 0.7);
    border: 1px solid rgba(0, 0, 0, 0.073);
    border-bottom: 1px solid rgba(0, 0, 0, 0.183);
    border-radius: 5px;
    outline: none;
}

PickerBase:hover {
    background: rgba(249, 249, 249, 0.5);
}

PickerBase:pressed {
    background: rgba(249, 249, 249, 0.3);
    border-bottom: 1px solid rgba(0, 0, 0, 0.073);
}

PickerBase:disabled {
    color: rgba(0, 0, 0, 0.36);
    background: rgba(255, 255, 255, 0.3);
    border: 1px solid rgba(0, 0, 0, 0.06);
    border-bottom: 1px solid rgba(0, 0, 0, 0.06);
}

#pickerButton {
    font: 14px 'Segoe UI', 'Microsoft YaHei', 'PingFang SC';
    color: rgba(0, 0, 0, 0.6);
    background-color: transparent;
    border: none;
    outline: none;
    padding-left: 10px;
    padding-right: 10px;
}

#pickerButton:disabled {
    color: rgba(0, 0, 0, 0.36);
}

#pickerButton[hasBorder=true]:enabled {
    border-right: 1px solid rgba(0, 0, 0, 0.073);
}

#pickerButton[hasBorder=true]:disabled {
    border-right: 1px solid rgba(0, 0, 0, 0.06);
}

#pickerButton[hasBorder=false] {
    border-right: transparent;
}

#pickerButton[enter=true]:enabled {
    color: rgba(0, 0, 0, 0.896);
}

#pickerButton[hasValue=true]:enabled{
    color: rgb(0, 0, 0);
}

#pickerButton[pressed=true] {
    color: rgba(0, 0, 0, 0.6);
}

#pickerButton[align=&quot;center&quot;] {
    text-align: center;
}

#pickerButton[align=&quot;left&quot;] {
    text-align: left;
}

#pickerButton[align=&quot;right&quot;] {
    text-align: right;
}
</string>
             </property>
             <property name="locale">
              <locale language="Chinese" country="China"/>
             </property>
             <property name="text">
              <string/>
             </property>
             <property name="autoDefault">
              <bool>false</bool>
             </property>
             <property name="default">
              <bool>false</bool>
             </property>
             <property name="flat">
              <bool>false</bool>
             </property>
             <property name="secondVisible">
              <bool>true</bool>
             </property>
            </widget>
           </item>
          </layout>
         </item>
         <item row="1" column="1" rowspan="2">
          <layout class="QVBoxLayout" name="verticalLayout">
           <property name="spacing">
            <number>2</number>
           </property>
           <item>
            <widget class="CheckBox" name="check_box_create_time">
             <property name="minimumSize">
              <size>
               <width>29</width>
               <height>22</height>
              </size>
             </property>
             <property name="maximumSize">
              <size>
               <width>90</width>
               <height>22</height>
              </size>
             </property>
             <property name="text">
              <string>创建时间</string>
             </property>
             <property name="checked">
              <bool>true</bool>
             </property>
            </widget>
           </item>
           <item>
            <widget class="CheckBox" name="check_box_modify_time">
             <property name="minimumSize">
              <size>
               <width>29</width>
               <height>22</height>
              </size>
             </property>
             <property name="maximumSize">
              <size>
               <width>90</width>
               <height>22</height>
              </size>
             </property>
             <property name="text">
              <string>修改时间</string>
             </property>
             <property name="checked">
              <bool>true</bool>
             </property>
            </widget>
           </item>
           <item>
            <widget class="CheckBox" name="check_box_access_time">
             <property name="minimumSize">
              <size>
               <width>29</width>
               <height>22</height>
              </size>
             </property>
             <property name="maximumSize">
              <size>
               <width>90</width>
               <height>22</height>
              </size>
             </property>
             <property name="text">
              <string>访问时间</string>
             </property>
             <property name="checked">
              <bool>true</bool>
             </property>
            </widget>
           </item>
           <item>
            <widget class="CheckBox" name="check_box_auto_clear">
             <property name="minimumSize">
              <size>
               <width>29</width>
               <height>22</height>
              </size>
             </property>
             <property name="maximumSize">
              <size>
               <width>90</width>
               <height>22</height>
              </size>
             </property>
             <property name="text">
              <string>自动清空</string>
             </property>
             <property name="checked">
              <bool>true</bool>
             </property>
            </widget>
           </item>
          </layout>
         </item>
         <item row="2" column="0">
          <layout class="QHBoxLayout" name="horizontalLayout">
           <item>
            <widget class="ToolButton" name="tool_button_open_dir">
             <property name="sizePolicy">
              <sizepolicy hsizetype="Minimum" vsizetype="Fixed">
               <horstretch>0</horstretch>
               <verstretch>0</verstretch>
              </sizepolicy>
             </property>
             <property name="minimumSize">
              <size>
               <width>30</width>
               <height>30</height>
              </size>
             </property>
             <property name="maximumSize">
              <size>
               <width>30</width>
               <height>30</height>
              </size>
             </property>
            </widget>
           </item>
           <item>
            <widget class="PushButton" name="push_button_change_time">
             <property name="sizePolicy">
              <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
               <horstretch>0</horstretch>
               <verstretch>0</verstretch>
              </sizepolicy>
             </property>
             <property name="minimumSize">
              <size>
               <width>205</width>
               <height>30</height>
              </size>
             </property>
             <property name="maximumSize">
              <size>
               <width>205</width>
               <height>30</height>
              </size>
             </property>
             <property name="text">
              <string>修改</string>
             </property>
            </widget>
           </item>
          </layout>
         </item>
        </layout>
       </item>
      </layout>
     </item>
    </layout>
   </item>
  </layout>
 </widget>
 <customwidgets>
  <customwidget>
   <class>CheckBox</class>
   <extends>QCheckBox</extends>
   <header>qfluentwidgets</header>
  </customwidget>
  <customwidget>
   <class>PushButton</class>
   <extends>QPushButton</extends>
   <header>qfluentwidgets</header>
  </customwidget>
  <customwidget>
   <class>ToolButton</class>
   <extends>QToolButton</extends>
   <header>qfluentwidgets</header>
  </customwidget>
  <customwidget>
   <class>CalendarPicker</class>
   <extends>QPushButton</extends>
   <header>qfluentwidgets</header>
  </customwidget>
  <customwidget>
   <class>TimePicker</class>
   <extends>QPushButton</extends>
   <header>qfluentwidgets</header>
  </customwidget>
  <customwidget>
   <class>StrongBodyLabel</class>
   <extends>QLabel</extends>
   <header>qfluentwidgets</header>
  </customwidget>
  <customwidget>
   <class>TextEdit</class>
   <extends>QTextEdit</extends>
   <header>qfluentwidgets</header>
  </customwidget>
  <customwidget>
   <class>TableWidget</class>
   <extends>QTableWidget</extends>
   <header>qfluentwidgets</header>
  </customwidget>
 </customwidgets>
 <resources/>
 <connections/>
</ui>
